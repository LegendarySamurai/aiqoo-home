"use strict";

function startTracking() {
    _ut_UID = getCookie("ut_UID");
    _ut_UID.length < 5 && (_ut_UID = hashCode(generateUninqUserId()), setCookie("ut_UID", _ut_UID, 2));
    _ut_loc = getCookie("ut_loc");
    _ut_loc.length < 5 ? makeGetRequest("https://api.ipdata.co/?api-key=test", 3, 1) : getFullInformation();
    var n = new URLSearchParams(window.location.search);
    n.has("utm_source") && setCookie("utm_source", n.get("utm_source"), 30);
    n.has("utm_medium") && setCookie("utm_medium", n.get("utm_medium"), 30);
    n.has("utm_campaign") && setCookie("utm_campaign", n.get("utm_campaign"), 30);
    n.has("utm_term") && setCookie("utm_term", n.get("utm_term"), 30);
    n.has("utm_content") && setCookie("utm_content", n.get("utm_content"), 30);
    n.has("utm_keyword") && setCookie("utm_keyword", n.get("utm_keyword"), 30);
    n.has("utm_tags") && setCookie("utm_tags", n.get("utm_tags"), 30)
}

function getFullInformation() {
    userObj = {};
    userObj.browser_language = navigator.language;
    userObj.brwoser_name = checkBrowser();
    userObj.browser_version = checkVersionBrowser();
    userObj.platform = navigator.platform;
    userObj.operation_system = navigator.appVersion;
    userObj.connection = GetConnection();
    userObj.connection_speed = ConnectionSpeed();
    userObj.url = window.location.href;
    userObj.page_refer = document.referrer;
    userObj.device_operation_system = getDeviceOperatingSystem();
    userObj.device = getDevice();
    userObj.device_height = screen.height;
    userObj.device_width = screen.width;
    userObj.document_height = window.innerHeight;
    userObj.document_width = window.innerWidth;
    userObj.page_open_time = new Date;
    userObj.utm_source = getUrlParams("utm_source");
    userObj.utm_medium = getUrlParams("utm_medium");
    userObj.utm_campaign = getUrlParams("utm_campaign");
    userObj.utm_term = getUrlParams("utm_term");
    userObj.utm_content = getUrlParams("utm_content");
    userObj.utm_keyword = getUrlParams("utm_keyword");
    userObj.utm_tags = getUrlParams("utm_tags");
    try {
        navigator.getBattery().then(function (n) {
            return bb = n.level * 100 + "%"
        }).then(function (n) {
            userObj.battery_status = n
        })
    } catch (r) {
        userObj.battery_status = "-1%"
    }
    var n = JSON.parse(JSON.parse(_ut_loc)),
        t = "",
        i = "";
    n.languages.forEach(function (n) {
        t += n.name + ",";
        i += n.rtl.toString() + ","
    });
    t += "###";
    i += "###";
    t = t.replace(",###", "");
    i = i.replace(",###", "");
    userObj.ip = n.ip;
    userObj.is_eu = n.is_eu;
    userObj.city = n.city;
    userObj.region = n.region;
    userObj.region_code = n.region_code;
    userObj.country_name = n.country_name;
    userObj.country_code = n.country_code;
    userObj.continent_name = n.continent_name;
    userObj.continent_code = n.continent_code;
    userObj.latitude = n.latitude;
    userObj.longitude = n.longitude;
    userObj.asn = n.asn;
    userObj.organisation = n.organisation;
    userObj.postal = n.postal;
    userObj.calling_code = n.calling_code;
    userObj.flag = n.flag;
    userObj.carrier_name = n.carrier.name;
    userObj.carrier_mcc = n.carrier.mcc;
    userObj.carrier_mnc = n.carrier.mnc;
    userObj.languages_name = t;
    userObj.languages_rtl = i;
    userObj.currency_name = n.currency.name;
    userObj.currency_code = n.currency.code;
    userObj.currency_symbol = n.currency.symbol;
    userObj.currency_native = n.currency["native"];
    userObj.currency_plural = n.currency.plural;
    userObj.time_zone_name = n.time_zone.name;
    userObj.time_zone_abbr = n.time_zone.abbr;
    userObj.time_zone_offset = n.time_zone.offset;
    userObj.time_zone_is_dst = n.time_zone.is_dst;
    userObj.time_zone_current_time = n.time_zone.current_time;
    userObj.threat_is_tor = n.threat.is_tor;
    userObj.threat_is_proxy = n.threat.is_proxy;
    userObj.threat_is_anonymous = n.threat.is_anonymous;
    userObj.threat_is_known_attacker = n.threat.is_known_attacker;
    userObj.threat_is_known_abuser = n.threat.is_known_abuser;
    userObj.threat_is_threat = n.threat.is_threat;
    userObj.threat_is_bogon = n.threat.is_bogon;
    obj = {};
    obj.UID = _ut_UID;
    obj.TempCode = _userTempCode;
    obj.FullData = JSON.stringify(userObj);
    makeRequest("POST", _apiUrl, "TrackingPoints/addTrackingPoint", 3, 1, JSON.stringify(obj))
}

function createRequestObject() {
    var n;
    if (window.XMLHttpRequest) try {
        n = new XMLHttpRequest
    } catch (t) {
        n = !1
    } else if (window.ActiveXObject) try {
        n = new ActiveXObject("Msxml2.HTMLHTTP")
    } catch (t) {
        try {
            n = new ActiveXObject("Microsoft.XMLHTTP")
        } catch (t) {
            n = !1
        }
    }
    return n
}

function makeGetRequest(n, t, i) {
    if (i <= t) {
        var r = createRequestObject();
        r.open("GET", n);
        r.send();
        r.onreadystatechange = function () {
            var e = this,
                u, f, o;
            if (r.readyState === 4) {
                if (r.status == 200) return _ut_loc = r.responseText, u = _ut_loc.indexOf("emoji_flag"), f = _ut_loc.indexOf("carrier"), _ut_loc = JSON.stringify(_ut_loc.replace(_ut_loc.substring(u, f), "")), setCookie("ut_loc", _ut_loc, 2), console.log(r.responseText), getFullInformation(), r.responseText;
                o = setTimeout(function () {
                    makeGetRequest(n, t, i + 1);
                }, 2e3)
            }
        }
    } else _ut_loc = "{}", getFullInformation()
}

function makeRequest(n, t, i, r, u, f) {
    if (console.log(r), console.log(u), u <= r) {
        var e = createRequestObject();
        t += i;
        e.open(n, t, !0);
        e.setRequestHeader("Content-Type", "application/json");
        e.setRequestHeader("Access-Control-Allow-Origin", "*");
        e.send(f);
        e.onreadystatechange = function () {
            var n = this,
                t;
            if (e.readyState == 4) {
                t = setTimeout(function () {
                    makeRequest(i, r, u + 1, f.replace('UID": ', 'UID": 1'));
                    alert(n.readyState + " - bad - " + e.responseText + u)
                }, 2e3)
            }
        }
    }
}

function getBattery() {
    try {
        var n = !1;
        return navigator.getBattery().then(function (t) {
            n = t.charging;
            t.addEventListener("chargingchange", function () {
                n = t.charging
            })
        }), n
    } catch (t) {
        return "Not Support"
    }
}

function getDeviceOperatingSystem() {
    var n = navigator.userAgent || navigator.vendor || window.opera;
    return /windows phone/i.test(n) ? "Windows Phone" : /android/i.test(n) ? "Android" : /iPad|iPhone|iPod/.test(n) && !window.MSStream ? "iOS" : /Chrome/.test(n) ? "Chrome" : "unknown"
}

function getDevice() {
    var n = navigator.userAgent || navigator.vendor || window.opera;
    return /iPhone/.test(n) ? "Iphone" : /Nokia/.test(n) ? "Nokia" : /Nexus/.test(n) ? "Nexus" : /iPad/.test(n) ? "Ipad" : /Android/.test(n) ? "Android" : /Windows Phone/.test(n) ? "Windows Phone" : /Windows/.test(n) ? "Windows PC" : void 0
}

function getUrlParams(n) {
    var t = new URLSearchParams(window.location.search);
    if (t.has(n)) return t.get(n)
}

function checkBrowser() {
    var n = !!window.opr && !!opr.addons || !!window.opera || navigator.userAgent.indexOf(" OPR/") >= 0,
        t = typeof InstallTrigger != "undefined",
        i = /constructor/i.test(window.HTMLElement) || function (n) {
            return n.toString() === "[object SafariRemoteNotification]"
        }(!window.safari || typeof safari != "undefined" && safari.pushNotification),
        r = /*@cc_on!@*/ !1 || !!document.documentMode,
        u = !r && !!window.StyleMedia,
        f = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);
    return n ? "Opera" : t ? "Firefox" : i ? "Safari" : u ? "Edge" : f ? "Chrome" : void 0
}

function GetConnection() {
    try {
        return navigator.connection.effectiveType
    } catch (n) {
        return n = "Not Support"
    }
}

function ConnectionSpeed() {
    try {
        return /\slow-2g|2g|3g/.test(navigator.connection.effectiveType) ? "slow" : "fast"
    } catch (n) {
        return "Not Support"
    }
}

function checkVersionBrowser() {
    var i = navigator.userAgent,
        t, n = i.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
    return /trident/i.test(n[1]) ? (t = /\brv[ :]+(\d+)/g.exec(i) || [], "IE " + (t[1] || "")) : n[1] === "Chrome" && (t = i.match(/\b(OPR|Edge)\/(\d+)/), t != null) ? t.slice(1).join(" ").replace("OPR", "Opera") : (n = n[2] ? [n[1], n[2]] : [navigator.appName, navigator.appVersion, "-?"], (t = i.match(/version\/(\d+)/i)) != null && n.splice(1, 1, t[1]), n.join(" "))
}

function getCookie(n) {
    for (var t, r = n + "=", f = decodeURIComponent(document.cookie), u = f.split(";"), i = 0; i < u.length; i++) {
        for (t = u[i]; t.charAt(0) == " ";) t = t.substring(1);
        if (t.indexOf(r) == 0) return t.substring(r.length, t.length)
    }
    return ""
}

function setCookie(n, t, i) {
    var r = new Date,
        u;
    r.setTime(r.getTime() + i * 36e5);
    u = "expires=" + r.toUTCString();
    document.cookie = n + "=" + t + ";" + u + ";path=/"
}

function IdGenerator(n) {
    for (var t = "", i = "123456789", u = i.length, r = 0; r < n; r++) t += i.charAt(Math.floor(Math.random() * u));
    return t
}

function generateUninqUserId() {
    var n = new Date;
    return IdGenerator(1) + n.getDate() + "" + n.getMonth() + 1 + "" + n.getFullYear() + "" + n.getHours() + "" + n.getMinutes() + "" + n.getSeconds() + navigator.userAgent
}

function hashCode(n) {
    for (var t = 0, i = 0; t < n.length; t++) i = Math.imul(31, i) + n.charCodeAt(t) | 0;
    return i.toString().replace("-", "")
}

function setEndSession(n, t, i) {
    if (i <= t) {
        var r = createRequestObject();
        r.open("GET", n);
        r.send();
        r.onreadystatechange = function () {
            var u = this,
                f;
            r.readyState === 4 && (r.status == 200 ? console.log("Success") : f = setTimeout(function () {
                setEndSession(n, t, i + 1);
            }, 2e3))
        }
    }
}
var myExtObject = {
    fireConvEvent: function (n) {
        window.dataLayer = window.dataLayer || [];
        window.dataLayer.push({
            event: "conv_" + n.toLowerCase()
        })
    },
    func2: function () {
        alert("function 2 called")
    }
},
    _apiUrl = "https://api.aiq-magazine.com/api/v1/",
    _userTempCode = IdGenerator(10),
    _ut_UID, _ut_loc, obj, bb, userObj;
window.addEventListener("beforeunload", function () {
    setEndSession(_apiUrl + "TrackingPoints/setTrackingPointEndSession?UID=" + getCookie("ut_UID") + "&TempCode=" + _userTempCode, 3, 1)
});